// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int    @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String @unique
  dateOfBirth String
  gender      String
  password    String
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  Product     Product[]
}

model Product {
  id            Int               @id @default(autoincrement())
  name          String
  description   String
  image         String?
  stock         Int
  categoryId    Int
  Category      Category          @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  transactions  TransactionItem[]
  Transaction   Transaction?      @relation(fields: [transactionId], references: [id])
  transactionId Int?
}

model Transaction {
  id        Int               @id @default(autoincrement())
  type      String
  createdAt DateTime          @default(now())
  items     TransactionItem[]
  Product   Product[]
}

model TransactionItem {
  id            Int         @id @default(autoincrement())
  productId     Int
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int
  quantity      Int
  product       Product     @relation(fields: [productId], references: [id])
}

enum TransactionType {
  STOCK_IN
  STOCK_OUT
}
